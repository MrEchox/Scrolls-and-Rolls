{
  "openapi": "3.0.1",
  "info": {
    "title": "sar-backend",
    "version": "1.0"
  },
  "paths": {
    "/users/{userId}": {
      "get": {
        "tags": [
          "sar-backend"
        ],
        "description": "Gets game session by ID.",
        "operationId": "GetUserById",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "sar-backend"
        ],
        "description": "Updates a user.",
        "operationId": "UpdateUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "The user to update.": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "sar-backend"
        ],
        "description": "Deletes a user.",
        "operationId": "DeleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/sessions/{sessionId}/messages": {
      "get": {
        "tags": [
          "sar-backend"
        ],
        "description": "Gets all messages in a session.",
        "operationId": "GetAllMessagesInSession",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "sar-backend"
        ],
        "description": "Creates a new message.",
        "operationId": "CreateMessage",
        "requestBody": {
          "content": {
            "The message to create.": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/{sessionId}/messages/{userId}": {
      "get": {
        "tags": [
          "sar-backend"
        ],
        "description": "Gets all messages in a session from a specific user.",
        "operationId": "GetAllMessagesInSessionFromUser",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/sessions": {
      "get": {
        "tags": [
          "sar-backend"
        ],
        "description": "Gets all game sessions.",
        "operationId": "GetAllSessions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "sar-backend"
        ],
        "description": "Creates a new game session.",
        "operationId": "CreateSession",
        "requestBody": {
          "content": {
            "The session to create.": {
              "schema": {
                "$ref": "#/components/schemas/Session"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/{sessionId}": {
      "get": {
        "tags": [
          "sar-backend"
        ],
        "description": "Gets game session by ID.",
        "operationId": "GetSessionById",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "sar-backend"
        ],
        "description": "Updates a game session by ID.",
        "operationId": "UpdateSession",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "The session to update.": {
              "schema": {
                "$ref": "#/components/schemas/Session"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "sar-backend"
        ],
        "description": "Deletes a game session by ID.",
        "operationId": "DeleteSession",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/sessions/{sessionId}/characters": {
      "get": {
        "tags": [
          "sar-backend"
        ],
        "description": "Gets all characters from specified session.",
        "operationId": "GetAllCharacters",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Character"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "sar-backend"
        ],
        "description": "Creates a new character for specific session.",
        "operationId": "CreateCharacter",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Character"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Character"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/sessions/{sessionId}/characters/{characterId}": {
      "get": {
        "tags": [
          "sar-backend"
        ],
        "description": "Gets character by ID from specified session.",
        "operationId": "GetCharacterById",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "characterId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Character"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "sar-backend"
        ],
        "description": "Updates a character by ID for specific session.",
        "operationId": "UpdateCharacter",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "characterId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Character"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Character"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "sar-backend"
        ],
        "description": "Deletes a character by ID for specific session.",
        "operationId": "DeleteCharacter",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "characterId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/sessions/{sessionId}/items": {
      "get": {
        "tags": [
          "sar-backend"
        ],
        "description": "Gets all items in a specified session.",
        "operationId": "GetAllItems",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Item"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "sar-backend"
        ],
        "description": "Creates a new item for specified session.",
        "operationId": "CreateItem",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Item"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/sessions/{sessionId}/items/{itemId}": {
      "get": {
        "tags": [
          "sar-backend"
        ],
        "description": "Gets item by ID from specified session.",
        "operationId": "GetItemById",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "sar-backend"
        ],
        "description": "Updates an item for specified session.",
        "operationId": "UpdateItem",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Item"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "sar-backend"
        ],
        "description": "Deletes an item by ID for specified session.",
        "operationId": "DeleteItem",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/sessions/{sessionId}/items/{itemId}/assign/{characterId}": {
      "post": {
        "tags": [
          "sar-backend"
        ],
        "description": "Assigns an item to a character in the same (specified) session.",
        "operationId": "AssignItemToCharacter",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "characterId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/{sessionId}/characters/{characterId}/items": {
      "get": {
        "tags": [
          "sar-backend"
        ],
        "description": "Gets all items from specified character and session.",
        "operationId": "GetAllItemsForCharacter",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "characterId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Item"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sessions/{sessionId}/characters/{characterId}/items/{itemId}/assign/{newCharacterId}": {
      "post": {
        "tags": [
          "sar-backend"
        ],
        "description": "Assigns an item to a different character in the same (specified) session.",
        "operationId": "AssignCharacterItemToCharacter",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "characterId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "newCharacterId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "sar-backend"
        ],
        "description": "Registers/Creates a new user.",
        "operationId": "RegisterUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "sar-backend"
        ],
        "description": "Logs in a user.",
        "operationId": "LoginUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/auth/createadmin": {
      "post": {
        "tags": [
          "sar-backend"
        ],
        "description": "Creates a new admin user.",
        "operationId": "CreateAdminUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Character": {
        "required": [
          "biography",
          "charisma",
          "constitution",
          "dexterity",
          "intelligence",
          "isNpc",
          "name",
          "strength",
          "userId",
          "wisdom"
        ],
        "type": "object",
        "properties": {
          "characterId": {
            "type": "string",
            "format": "uuid"
          },
          "sessionId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "biography": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "isNpc": {
            "type": "boolean"
          },
          "name": {
            "maxLength": 20,
            "minLength": 3,
            "type": "string"
          },
          "gold": {
            "type": "integer",
            "format": "int32"
          },
          "dexterity": {
            "type": "integer",
            "format": "int32"
          },
          "strength": {
            "type": "integer",
            "format": "int32"
          },
          "constitution": {
            "type": "integer",
            "format": "int32"
          },
          "intelligence": {
            "type": "integer",
            "format": "int32"
          },
          "wisdom": {
            "type": "integer",
            "format": "int32"
          },
          "charisma": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Item": {
        "required": [
          "description",
          "name"
        ],
        "type": "object",
        "properties": {
          "itemId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 20,
            "minLength": 3,
            "type": "string"
          },
          "description": {
            "minLength": 1,
            "type": "string"
          },
          "modifiedDexterity": {
            "type": "integer",
            "format": "int32"
          },
          "modifiedStrength": {
            "type": "integer",
            "format": "int32"
          },
          "modifiedConstitution": {
            "type": "integer",
            "format": "int32"
          },
          "modifiedIntelligence": {
            "type": "integer",
            "format": "int32"
          },
          "modifiedWisdom": {
            "type": "integer",
            "format": "int32"
          },
          "modifiedCharisma": {
            "type": "integer",
            "format": "int32"
          },
          "sessionId": {
            "type": "string",
            "format": "uuid"
          },
          "characterId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Message": {
        "required": [
          "channel",
          "messageContent",
          "sessionId",
          "userId"
        ],
        "type": "object",
        "properties": {
          "messageId": {
            "type": "string",
            "format": "uuid"
          },
          "sessionId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "messageContent": {
            "minLength": 1,
            "type": "string"
          },
          "timeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "channel": {
            "minLength": 1,
            "pattern": "^(Chat|Story)$",
            "type": "string"
          },
          "session": {
            "$ref": "#/components/schemas/Session"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false
      },
      "Session": {
        "required": [
          "gameMasterId",
          "sessionName"
        ],
        "type": "object",
        "properties": {
          "sessionId": {
            "type": "string",
            "format": "uuid"
          },
          "gameMasterId": {
            "type": "string",
            "format": "uuid"
          },
          "sessionName": {
            "maxLength": 20,
            "minLength": 3,
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "User": {
        "required": [
          "email",
          "passwordHash",
          "role",
          "username"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "maxLength": 20,
            "minLength": 3,
            "type": "string"
          },
          "passwordHash": {
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "role": {
            "minLength": 1,
            "pattern": "^(Admin|GameMaster|Player)$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UserLoginDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserRegistrationDto": {
        "required": [
          "email",
          "password",
          "role",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 20,
            "minLength": 3,
            "type": "string"
          },
          "password": {
            "maxLength": 32,
            "minLength": 8,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,32}$",
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "role": {
            "minLength": 1,
            "pattern": "^(Admin|GameMaster|Player)$",
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  }
}